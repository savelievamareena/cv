{
  "projects": [
    {
      "id": 1,
      "title": "Fundraising Web-Application for American School",
      "description": "In this project I played a key role in front-end and back-end development. Features implemented: weakly reports on donations, integration with PayPal API including recurring payments, several types of users functionality (principals, teachers, admins, bookkeepers, parents, students), scheduled emails within 6 timezones, cron jobs for weekly newsletters.",
      "technologies": [
        "PHP 5 (Yii)",
        "JavaScript (jQuery)",
        "PayPal API",
        "MySQL"
      ]
    },
    {
      "id": 2,
      "title": "Healthcare Patient Interaction and Scheduling Platform",
      "description": "Engineered a robust Patient Interaction Platform tailored for a medical clinic. Features implemented: functionality for three types of users (quest, admin and patient), reviews, callback requests, possibility to make an appointment and to delete it for patients, personal cabinet for admins with the access to reviews moderation and so on.",
      "technologies": [
        "Java (SpringBoot, Hibernate)",
        "JavaScript (React)",
        "MySQL"
      ]
    },
    {
      "id": 3,
      "title": "Personal CV",
      "description": "Personal CV website built with NextJS and Tailwind. As a web developer, I created my own CV website using NextJS, a React framework, and Tailwind for styling. I designed and developed the entire website, including the layout, responsive design, and content management.",
      "technologies": [
        "JavaScript (React, Next.js)",
        "Tailwind"
      ]
    },
    {
      "id": 4,
      "title": "Real-Time Multiplayer Tic-Tac-Toe Game",
      "description": "Implemented a real-time multiplayer Tic-Tac-Toe game enabling two players to interact and play the game seamlessly on the web. Utilized React.js for building a user-friendly and responsive front-end interface. Incorporated the use of React hooks to manage the state and lifecycle of the game, ensuring a real-time gaming experience. The back-end, written in Node.js, handles player moves, game state, and user sessions, providing robust and efficient game management. Utilized WebSockets for real-time bidirectional event-based communication, ensuring immediate updates and synchronization between players. Integrated a simplistic yet effective error handling mechanism to manage game exceptions and provide a smooth user experience. The modular design of the project allows for easy updates and maintenance, demonstrating a good understanding of software design principles.",
      "technologies": [
        "JavaScript (React)",
        "Node.js",
        "Polling"
      ]
    }
  ],
  "messages": [
    {
      "id": 1,
      "name": 1,
      "email": "Fundraising Web-Application for American School",
      "text": "In this project I played a key role in front-end and back-end development. Features implemented: weakly reports on donations, integration with PayPal API including recurring payments, several types of users functionality (principals, teachers, admins, bookkeepers, parents, students), scheduled emails within 6 timezones, cron jobs for weekly newsletters."
    },
    {
      "name": "Maryna Savelyeva",
      "email": "persempre1@yandex.ru",
      "text": "jljkljkljl",
      "id": 2
    },
    {
      "name": "cbcvbcvb",
      "email": "cbcvbcbcvb",
      "text": "cbcbcbcb",
      "id": 3
    },
    {
      "name": "22222",
      "email": "222222",
      "text": "2222222",
      "id": 4
    }
  ]
}